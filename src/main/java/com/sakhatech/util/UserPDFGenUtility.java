package com.sakhatech.util;

import java.awt.Color;
import java.util.Date;

import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.web.multipart.MultipartFile;

import com.itextpdf.text.BaseColor;
import com.itextpdf.text.Document;
import com.itextpdf.text.Font;
import com.itextpdf.text.Image;
import com.itextpdf.text.Paragraph;
import com.sakhatech.dto.UserProfileDto;

/**
 * The utility class to generate a PDF
 * 
 * @author Naveen
 * @createdDate 7-Jun-2017
 * @modifiedDate 15-Jun-2017
 */
public class UserPDFGenUtility {
	
	private static final Logger logger = LoggerFactory.getLogger(UserPDFGenUtility.class);
	
	private UserProfileDto userDetails;
	private Document document;
	
    private static Font catFont = new Font(Font.FontFamily.TIMES_ROMAN, 18,
            Font.BOLD);
    private static Font redFont = new Font(Font.FontFamily.TIMES_ROMAN, 12,
            Font.NORMAL, BaseColor.RED);
    private static Font subFont = new Font(Font.FontFamily.TIMES_ROMAN, 16,
            Font.BOLD);
    private static Font smallFont = new Font(Font.FontFamily.TIMES_ROMAN, 10);
	
	public UserPDFGenUtility(UserProfileDto userDetails, Document document) {
		this.userDetails = userDetails;
		this.document = document;
		logger.info("User details has been instantated for Generating PDF");
	}
	
	private void addEmptyLine(Paragraph paragraph, int number) {
        for (int i = 0; i < number; i++) {
            paragraph.add(new Paragraph(" "));
        }
    }
	
	public void addFileDetails(){
		document.addTitle("User Profile Details");
		document.addSubject("Th document contains the user details");
		document.addKeywords("User , profile");
		document.addAuthor("Naveen Heroorkar");
		document.addCreator("sh.naveen16@gmail.com");
		document.addCreationDate();
		
		logger.info("File details has been added");
	}

	public void addTitlePage() throws Exception {
		Paragraph pTitle = new Paragraph();
		pTitle.add(new Paragraph("The User Profile", catFont));
		
		pTitle.add(new Paragraph("The profile has been generated by using the java program" , redFont));
		
		pTitle.add(new Paragraph(
                "Report generated by: " + userDetails.getName() + ", " + new Date(), smallFont));
		
		document.add(pTitle);
		
		document.newPage();
		
		logger.info("Title Page has been added");
		
	}
	
	public void addUserProfile() throws Exception {
		Paragraph pUserProfile = new Paragraph();
		
		pUserProfile.add(new Paragraph("Name : " +userDetails.getName()));
		pUserProfile.add(new Paragraph("Email : "+userDetails.getEmail()));
		pUserProfile.add(new Paragraph("Mobile : "+userDetails.getMobile()));	
		
		MultipartFile userImg = EncodeDecodeMultipartFile.decryptMultiPartFile(
				userDetails.getPhotoEncodedBase64(), userDetails.getName(), "", userDetails.getEmail());
		
		Image img = Image.getInstance(userImg.getBytes());
		Paragraph pUserImg = new Paragraph();
		pUserImg.add("Profile Pic : ");
		addEmptyLine(pUserImg, 1);
		pUserImg.add(img);
		pUserProfile.add(pUserImg);
		
		java.awt.Image qrCode = QRCodeGenreator.generateQRForUser(userDetails);
		
		Image qrImage = Image.getInstance(qrCode, new Color(0, 0, 0));
		
		Paragraph pQR = new Paragraph();
		pQR.add("QR Code : ");
		addEmptyLine(pQR, 1);
		pQR.add(qrImage);
				
		pUserProfile.add(pQR);
		
		document.add(pUserProfile);
		
		logger.info("File Contend had been added");
	}

	public Document getDocument() throws Exception {
		if(document == null)
			throw new Exception("Document is Empty");
		
		logger.info("File Has been generated");
			
		return document;
	}

}
